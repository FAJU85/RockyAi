# Multi-stage build for Rocky AI UI
FROM node:18-alpine as builder

# Set work directory
WORKDIR /app

# Copy package files
COPY apps/ui/package*.json ./

# Install dependencies
RUN npm ci --only=production

# Copy source code
COPY apps/ui/ .

# Build the application
RUN npm run build

# Production stage
FROM nginx:alpine as production

# Install curl for health checks
RUN apk add --no-cache curl

# Copy built application
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Create non-root user
RUN addgroup -g 1001 -S rockyai && \
    adduser -S rockyai -u 1001

# Set permissions
RUN chown -R rockyai:rockyai /usr/share/nginx/html && \
    chown -R rockyai:rockyai /var/cache/nginx && \
    chown -R rockyai:rockyai /var/log/nginx && \
    chown -R rockyai:rockyai /etc/nginx/conf.d

# Switch to non-root user
USER rockyai

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
