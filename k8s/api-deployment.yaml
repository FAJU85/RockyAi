apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: rocky-ai
  labels:
    app: rocky-ai
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: rocky-ai
      component: api
  template:
    metadata:
      labels:
        app: rocky-ai
        component: api
    spec:
      containers:
      - name: api
        image: ghcr.io/your-org/rocky-ai/api:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: rocky-ai-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: rocky-ai-config
              key: REDIS_URL
        - name: DMR_URL
          valueFrom:
            configMapKeyRef:
              name: rocky-ai-config
              key: DMR_URL
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: rocky-ai-secrets
              key: JWT_SECRET_KEY
        - name: JWT_ALGORITHM
          valueFrom:
            configMapKeyRef:
              name: rocky-ai-config
              key: JWT_ALGORITHM
        - name: JWT_ACCESS_TOKEN_EXPIRE_MINUTES
          valueFrom:
            configMapKeyRef:
              name: rocky-ai-config
              key: JWT_ACCESS_TOKEN_EXPIRE_MINUTES
        - name: JWT_REFRESH_TOKEN_EXPIRE_DAYS
          valueFrom:
            configMapKeyRef:
              name: rocky-ai-config
              key: JWT_REFRESH_TOKEN_EXPIRE_DAYS
        - name: SECURITY_ALLOWED_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: rocky-ai-config
              key: SECURITY_ALLOWED_ORIGINS
        - name: SECURITY_ALLOWED_IPS
          valueFrom:
            configMapKeyRef:
              name: rocky-ai-config
              key: SECURITY_ALLOWED_IPS
        - name: SECURITY_BLOCKED_IPS
          valueFrom:
            configMapKeyRef:
              name: rocky-ai-config
              key: SECURITY_BLOCKED_IPS
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: rocky-ai-config
              key: LOG_LEVEL
        - name: LOG_FORMAT
          valueFrom:
            configMapKeyRef:
              name: rocky-ai-config
              key: LOG_FORMAT
        - name: WORKERS
          valueFrom:
            configMapKeyRef:
              name: rocky-ai-config
              key: WORKERS
        - name: MAX_CONNECTIONS
          valueFrom:
            configMapKeyRef:
              name: rocky-ai-config
              key: MAX_CONNECTIONS
        - name: TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: rocky-ai-config
              key: TIMEOUT
        - name: METRICS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: rocky-ai-config
              key: METRICS_ENABLED
        - name: HEALTH_CHECK_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: rocky-ai-config
              key: HEALTH_CHECK_INTERVAL
        - name: MAX_FILE_SIZE_MB
          valueFrom:
            configMapKeyRef:
              name: rocky-ai-config
              key: MAX_FILE_SIZE_MB
        - name: UPLOAD_DIR
          valueFrom:
            configMapKeyRef:
              name: rocky-ai-config
              key: UPLOAD_DIR
        - name: CACHE_TTL_SECONDS
          valueFrom:
            configMapKeyRef:
              name: rocky-ai-config
              key: CACHE_TTL_SECONDS
        - name: CACHE_MAX_MEMORY_MB
          valueFrom:
            configMapKeyRef:
              name: rocky-ai-config
              key: CACHE_MAX_MEMORY_MB
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        - name: logs
          mountPath: /app/logs
        - name: temp
          mountPath: /app/temp
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: uploads-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: logs-pvc
      - name: temp
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
